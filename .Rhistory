knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(data.table)
library(lubridate)
library(ggcorrplot)
library(quantmod)
library(reshape2)
library(scales)
library(viridisLite)
# Load IMF commodity price data
Commodity <- read.csv("https://raw.githubusercontent.com/kimcardinale/qtm302w-eda-project/refs/heads/main/data/raw/Commodity.csv")
# Load U.S. Producer Price Index (PPI) data from FRED
PPI <- read.csv("https://raw.githubusercontent.com/kimcardinale/qtm302w-eda-project/refs/heads/main/data/raw/PPI.csv")
cat("The raw commodity price and PPI datasets have been successfully loaded.\nReady for data cleaning and merging in the next step.\n")
# Convert Date column to proper format and extract Year-Month string
Commodity <-Commodity %>%
mutate(Date = ymd(Date))
# Filter only energy-related commodities to date range
energy_data <- Commodity %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30")) %>%
select(Date, `Crude.Oil.petroleum`, `Fuel.Energy.Index`, Coal)
# Rename columns
colnames(energy_data) <- c("Date", "CrudeOil", "NaturalGas", "Coal")
# Preview data
head(energy_data)
# Clean and filter PPI data to match commodity date range
PPI <- PPI %>%
# Rename the column and convert to Date format
rename(Date = observation_date) %>%
mutate(Date = ymd(Date)) %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30"))
# Merge datasets by date
merged_data <- inner_join(energy_data, PPI, by = "Date")%>%
rename(PPI = PPIACO)
# Preview merged data
head(merged_data)
write.csv(merged_data, "/Users/mac/Documents/qtm302w-eda-project/data/processed/merged_data.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(data.table)
library(lubridate)
library(ggcorrplot)
library(quantmod)
library(reshape2)
library(scales)
library(viridisLite)
# Load IMF commodity price data
Commodity <- read.csv("https://raw.githubusercontent.com/kimcardinale/qtm302w-eda-project/refs/heads/main/data/raw/Commodity.csv")
# Load U.S. Producer Price Index (PPI) data from FRED
PPI <- read.csv("https://raw.githubusercontent.com/kimcardinale/qtm302w-eda-project/refs/heads/main/data/raw/PPI.csv")
cat("The raw commodity price and PPI datasets have been successfully loaded.\nReady for data cleaning and merging in the next step.\n")
# Convert Date column to proper format and extract Year-Month string
Commodity <-Commodity %>%
mutate(Date = ymd(Date))
# Filter only energy-related commodities to date range
energy_data <- Commodity %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30")) %>%
select(Date, `Crude.Oil.petroleum`, `Fuel.Energy.Index`, Coal)
# Rename columns
colnames(energy_data) <- c("Date", "CrudeOil", "NaturalGas", "Coal")
# Preview data
head(energy_data)
# Clean and filter PPI data to match commodity date range
PPI <- PPI %>%
# Rename the column and convert to Date format
rename(Date = observation_date) %>%
mutate(Date = ymd(Date)) %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30"))
# Merge datasets by date
merged_data <- inner_join(energy_data, PPI, by = "Date")%>%
rename(PPI = PPIACO)
# Preview merged data
head(merged_data)
# Display summary statistics for each variable in the merged dataset
summary(merged_data)
# Reshape to long format for visualization
all_long <- merged_data %>%
select(Date, CrudeOil, NaturalGas, Coal, PPI) %>%
pivot_longer(cols = -Date, names_to = "Index", values_to = "Price")
# Show structure of reshaped data
str(all_long)
# Long data + per-facet medians
merged_data_long <- merged_data %>%
pivot_longer(
cols = c(CrudeOil, NaturalGas, Coal, PPI),
names_to = "Asset",
values_to = "Price"
)
asset_stats <- merged_data_long %>%
group_by(Asset) %>%
summarize(median_price = median(Price, na.rm = TRUE), .groups = "drop")
ggplot(merged_data_long, aes(x = Price)) +
geom_histogram(bins = 30, fill = viridis(1, begin = 0.2, end = 0.7), color = "white", boundary = 0) +
geom_vline(data = asset_stats, aes(xintercept = median_price), linetype = "dashed", linewidth = 0.6) +
facet_wrap(~ Asset, scales = "free", ncol = 2) +
scale_x_continuous(labels = label_number(big.mark = ",")) +
labs(
title = "What Do the Distributions Look Like?",
subtitle = "Each panel shows the distribution of levels by asset; dashed line marks the median",
x = "Level",
y = "Count",
caption = "Note: Scales are free across facets to reveal shape within each asset."
) +
theme_minimal(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(all_long, aes(x = Date, y = Price, color = Index)) +
geom_line(linewidth = 0.7) +
scale_color_viridis_d(
end = 0.85,
option = "D",
guide = guide_legend(nrow = 2, byrow = TRUE, title = "Asset"),
labels = c("Coal", "CrudeOil", "NaturalGas", "PPI")
) +
scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number(big.mark = ",")) +
labs(
title = "Energy Commodities vs. PPI Over Time",
subtitle = "1992–2016; align peaks/troughs to compare co-movement and divergence",
x = "Year",
y = "Level (index or price units)"
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold")
)
# Correlation + order variables by clustering
vars <- c("CrudeOil", "NaturalGas", "Coal", "PPI")
cor_matrix <- merged_data %>%
select(all_of(vars)) %>%
cor(use = "complete.obs")
# Order by hierarchical clustering for easier pattern reading
hc_order <- rownames(cor_matrix)[hclust(dist(cor_matrix))$order]
cor_melted <- melt(cor_matrix, varnames = c("Var1", "Var2"), value.name = "Corr") %>%
mutate(
Var1 = factor(Var1, levels = hc_order),
Var2 = factor(Var2, levels = hc_order)
) %>%
# keep upper triangle including diagonal to reduce redundancy
dplyr::filter(as.numeric(Var1) <= as.numeric(Var2))
ggplot(cor_melted, aes(Var1, Var2, fill = Corr)) +
geom_tile(color = "white", linewidth = 0.6) +
scale_fill_gradient2(
low = "#3B4CC0", mid = "white", high = "#B40426",
midpoint = 0, limits = c(-1, 1), oob = squish, name = "Pearson r"
) +
geom_text(aes(label = sprintf("%.2f", Corr)), size = 3) +
scale_x_discrete(NULL, expand = c(0, 0)) +
scale_y_discrete(NULL, expand = c(0, 0)) +
labs(
title = "How much do the fluctuations of the indice match each other?",
subtitle = "Correlation Heatmap (Pearson r): Ordered by similarity to reveal clusters of co-movement",
caption = "Cells show pairwise correlations; only upper triangle displayed."
) +
theme_minimal(base_size = 11) +
theme(
panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
legend.position = "right"
)
lagged_df <- merged_data %>%
select(Date, CrudeOil, NaturalGas, Coal, PPI) %>%
mutate(
CrudeOil_lag1  = dplyr::lag(CrudeOil, 1),
CrudeOil_lead1 = dplyr::lead(CrudeOil, 1),
NaturalGas_lag1  = dplyr::lag(NaturalGas, 1),
NaturalGas_lead1 = dplyr::lead(NaturalGas, 1),
Coal_lag1  = dplyr::lag(Coal, 1),
Coal_lead1 = dplyr::lead(Coal, 1)
)
# Build lag factor once
lags <- factor(c("-1 month", "0 month", "+1 month"),
levels = c("-1 month", "0 month", "+1 month"))
cor_results <- tibble(
Commodity = rep(c("Crude Oil", "Natural Gas", "Coal"), each = 3),
Lag       = rep(lags, times = 3),
Correlation = c(
cor(lagged_df$CrudeOil_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$CrudeOil,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$CrudeOil_lead1, lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas_lead1, lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal_lead1, lagged_df$PPI, use = "complete.obs")
)
)
# Cleaner table for print
kable(
cor_results %>% mutate(Correlation = round(Correlation, 3)),
caption = "Lagged correlations of commodities vs. PPI"
)
# Quick visual: small-multiple bars to surface the key pattern at a glance
ggplot(cor_results, aes(x = Lag, y = Correlation, fill = Lag)) +
geom_col(width = 0.7, show.legend = FALSE) +
facet_wrap(~ Commodity, nrow = 1) +
geom_hline(yintercept = 0, linewidth = 0.4) +
scale_y_continuous(labels = label_number(accuracy = 0.1), limits = c(-1, 1)) +
scale_fill_viridis_d(end = 0.85, option = "D") +
labs(
title = "Do Commodities Lead or Follow PPI?",
subtitle = "Bars show Pearson correlation between the the Commodity Index and PPI at -1, 0, and +1 month ",
x = "Alignment",
y = "Correlation"
) +
theme_minimal(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold"),
plot.title = element_text(face = "bold")
)
roll_cor <- function(x, y, window = 12) {
rollapplyr(
seq_along(x),
width = window,
FUN = function(i) cor(x[i:(i + window - 1)], y[i:(i + window - 1)], use = "complete.obs"),
by = 1, fill = NA
)
}
merged_data <- merged_data %>%
mutate(
roll_cor_crude = roll_cor(CrudeOil,   PPI, 12),
roll_cor_gas   = roll_cor(NaturalGas, PPI, 12),
roll_cor_coal  = roll_cor(Coal,       PPI, 12)
)
roll_long <- merged_data %>%
select(Date, roll_cor_crude, roll_cor_gas, roll_cor_coal) %>%
rename(CrudeOil = roll_cor_crude, NaturalGas = roll_cor_gas, Coal = roll_cor_coal) %>%
pivot_longer(-Date, names_to = "Commodity", values_to = "RollingCorrelation")
ggplot(roll_long, aes(x = Date, y = RollingCorrelation, color = Commodity)) +
geom_hline(yintercept = 0, linewidth = 0.4) +
geom_line(linewidth = 0.7) +
scale_color_viridis_d(end = 0.85, option = "D") +
scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
scale_y_continuous(limits = c(-1, 1), labels = label_number(accuracy = 0.2)) +
labs(
title = "Rolling 12-Month Correlation with PPI",
subtitle = "correlation windows to reveal regime shifts in co-movement during 1992–2016",
x = "Year",
y = "Correlation (window = 12 months)",
color = "Commodity",
caption = "Zero line helps distinguish positive vs. negative co-movement."
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold")
)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(data.table)
library(lubridate)
library(ggcorrplot)
library(quantmod)
library(reshape2)
library(scales)
library(viridisLite)
# Load IMF commodity price data
Commodity <- read.csv("https://raw.githubusercontent.com/william-dk/revised_eda/refs/heads/main/data/raw/Commodity.csv")
# Load U.S. Producer Price Index (PPI) data from FRED
PPI <- read.csv("https://raw.githubusercontent.com/william-dk/revised_eda/refs/heads/main/data/raw/PPI.csv")
cat("The raw commodity price and PPI datasets have been successfully loaded.\nReady for data cleaning and merging in the next step.\n")
# Convert Date column to proper format and extract Year-Month string
Commodity <-Commodity %>%
mutate(Date = ymd(Date))
# Filter only energy-related commodities to date range
energy_data <- Commodity %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30")) %>%
select(Date, `Crude.Oil.petroleum`, `Fuel.Energy.Index`, Coal)
# Rename columns
colnames(energy_data) <- c("Date", "CrudeOil", "NaturalGas", "Coal")
# Preview data
head(energy_data)
# Clean and filter PPI data to match commodity date range
PPI <- PPI %>%
# Rename the column and convert to Date format
rename(Date = observation_date) %>%
mutate(Date = ymd(Date)) %>%
filter(Date >= ymd("1992-01-01") & Date <= ymd("2016-06-30"))
# Merge datasets by date
merged_data <- inner_join(energy_data, PPI, by = "Date")%>%
rename(PPI = PPIACO)
# Preview merged data
head(merged_data)
# Display summary statistics for each variable in the merged dataset
summary(merged_data)
# Reshape to long format for visualization
all_long <- merged_data %>%
select(Date, CrudeOil, NaturalGas, Coal, PPI) %>%
pivot_longer(cols = -Date, names_to = "Index", values_to = "Price")
# Show structure of reshaped data
str(all_long)
# Long data + per-facet medians
merged_data_long <- merged_data %>%
pivot_longer(
cols = c(CrudeOil, NaturalGas, Coal, PPI),
names_to = "Asset",
values_to = "Price"
)
asset_stats <- merged_data_long %>%
group_by(Asset) %>%
summarize(median_price = median(Price, na.rm = TRUE), .groups = "drop")
ggplot(merged_data_long, aes(x = Price)) +
geom_histogram(bins = 30, fill = viridis(1, begin = 0.2, end = 0.7), color = "white", boundary = 0) +
geom_vline(data = asset_stats, aes(xintercept = median_price), linetype = "dashed", linewidth = 0.6) +
facet_wrap(~ Asset, scales = "free", ncol = 2) +
scale_x_continuous(labels = label_number(big.mark = ",")) +
labs(
title = "What Do the Distributions Look Like?",
subtitle = "Each panel shows the distribution of levels by asset; dashed line marks the median",
x = "Level",
y = "Count",
caption = "Note: Scales are free across facets to reveal shape within each asset."
) +
theme_minimal(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(all_long, aes(x = Date, y = Price, color = Index)) +
geom_line(linewidth = 0.7) +
scale_color_viridis_d(
end = 0.85,
option = "D",
guide = guide_legend(nrow = 2, byrow = TRUE, title = "Asset"),
labels = c("Coal", "CrudeOil", "NaturalGas", "PPI")
) +
scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number(big.mark = ",")) +
labs(
title = "Energy Commodities vs. PPI Over Time",
subtitle = "1992–2016; align peaks/troughs to compare co-movement and divergence",
x = "Year",
y = "Level (index or price units)"
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold")
)
# Correlation + order variables by clustering
vars <- c("CrudeOil", "NaturalGas", "Coal", "PPI")
cor_matrix <- merged_data %>%
select(all_of(vars)) %>%
cor(use = "complete.obs")
# Order by hierarchical clustering for easier pattern reading
hc_order <- rownames(cor_matrix)[hclust(dist(cor_matrix))$order]
cor_melted <- melt(cor_matrix, varnames = c("Var1", "Var2"), value.name = "Corr") %>%
mutate(
Var1 = factor(Var1, levels = hc_order),
Var2 = factor(Var2, levels = hc_order)
) %>%
# keep upper triangle including diagonal to reduce redundancy
dplyr::filter(as.numeric(Var1) <= as.numeric(Var2))
ggplot(cor_melted, aes(Var1, Var2, fill = Corr)) +
geom_tile(color = "white", linewidth = 0.6) +
scale_fill_gradient2(
low = "#3B4CC0", mid = "white", high = "#B40426",
midpoint = 0, limits = c(-1, 1), oob = squish, name = "Pearson r"
) +
geom_text(aes(label = sprintf("%.2f", Corr)), size = 3) +
scale_x_discrete(NULL, expand = c(0, 0)) +
scale_y_discrete(NULL, expand = c(0, 0)) +
labs(
title = "How much do the fluctuations of the indice match each other?",
subtitle = "Correlation Heatmap (Pearson r): Ordered by similarity to reveal clusters of co-movement",
caption = "Cells show pairwise correlations; only upper triangle displayed."
) +
theme_minimal(base_size = 11) +
theme(
panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
legend.position = "right"
)
lagged_df <- merged_data %>%
select(Date, CrudeOil, NaturalGas, Coal, PPI) %>%
mutate(
CrudeOil_lag1  = dplyr::lag(CrudeOil, 1),
CrudeOil_lead1 = dplyr::lead(CrudeOil, 1),
NaturalGas_lag1  = dplyr::lag(NaturalGas, 1),
NaturalGas_lead1 = dplyr::lead(NaturalGas, 1),
Coal_lag1  = dplyr::lag(Coal, 1),
Coal_lead1 = dplyr::lead(Coal, 1)
)
# Build lag factor once
lags <- factor(c("-1 month", "0 month", "+1 month"),
levels = c("-1 month", "0 month", "+1 month"))
cor_results <- tibble(
Commodity = rep(c("Crude Oil", "Natural Gas", "Coal"), each = 3),
Lag       = rep(lags, times = 3),
Correlation = c(
cor(lagged_df$CrudeOil_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$CrudeOil,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$CrudeOil_lead1, lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$NaturalGas_lead1, lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal_lag1,  lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal,       lagged_df$PPI, use = "complete.obs"),
cor(lagged_df$Coal_lead1, lagged_df$PPI, use = "complete.obs")
)
)
# Cleaner table for print
kable(
cor_results %>% mutate(Correlation = round(Correlation, 3)),
caption = "Lagged correlations of commodities vs. PPI"
)
# Quick visual: small-multiple bars to surface the key pattern at a glance
ggplot(cor_results, aes(x = Lag, y = Correlation, fill = Lag)) +
geom_col(width = 0.7, show.legend = FALSE) +
facet_wrap(~ Commodity, nrow = 1) +
geom_hline(yintercept = 0, linewidth = 0.4) +
scale_y_continuous(labels = label_number(accuracy = 0.1), limits = c(-1, 1)) +
scale_fill_viridis_d(end = 0.85, option = "D") +
labs(
title = "Do Commodities Lead or Follow PPI?",
subtitle = "Bars show Pearson correlation between the the Commodity Index and PPI at -1, 0, and +1 month ",
x = "Alignment",
y = "Correlation"
) +
theme_minimal(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold"),
plot.title = element_text(face = "bold")
)
roll_cor <- function(x, y, window = 12) {
rollapplyr(
seq_along(x),
width = window,
FUN = function(i) cor(x[i:(i + window - 1)], y[i:(i + window - 1)], use = "complete.obs"),
by = 1, fill = NA
)
}
merged_data <- merged_data %>%
mutate(
roll_cor_crude = roll_cor(CrudeOil,   PPI, 12),
roll_cor_gas   = roll_cor(NaturalGas, PPI, 12),
roll_cor_coal  = roll_cor(Coal,       PPI, 12)
)
roll_long <- merged_data %>%
select(Date, roll_cor_crude, roll_cor_gas, roll_cor_coal) %>%
rename(CrudeOil = roll_cor_crude, NaturalGas = roll_cor_gas, Coal = roll_cor_coal) %>%
pivot_longer(-Date, names_to = "Commodity", values_to = "RollingCorrelation")
ggplot(roll_long, aes(x = Date, y = RollingCorrelation, color = Commodity)) +
geom_hline(yintercept = 0, linewidth = 0.4) +
geom_line(linewidth = 0.7) +
scale_color_viridis_d(end = 0.85, option = "D") +
scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
scale_y_continuous(limits = c(-1, 1), labels = label_number(accuracy = 0.2)) +
labs(
title = "Rolling 12-Month Correlation with PPI",
subtitle = "correlation windows to reveal regime shifts in co-movement during 1992–2016",
x = "Year",
y = "Correlation (window = 12 months)",
color = "Commodity",
caption = "Zero line helps distinguish positive vs. negative co-movement."
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold")
)
